FROM ubuntu:18.04

ARG S3_TF_VERSION=1-15-0
ARG S3_TF_EI_VERSION=1-2
ARG PYTHON=python
ARG HEALTH_CHECK_VERSION=1.3.3

RUN apt-get update \
 && apt-get -y install --no-install-recommends \
    curl \
    ca-certificates \
    git \
    wget \
    vim \
    build-essential \
    zlib1g-dev \
    python-dev \
    python-pip \
 && apt-get update \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

# See http://bugs.python.org/issue19846
# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules
ENV LANG=C.UTF-8 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    MODEL_BASE_PATH=/models \
    MODEL_NAME=model

RUN wget https://amazonei-healthcheck.s3.amazonaws.com/v${HEALTH_CHECK_VERSION}/ei_health_check_${HEALTH_CHECK_VERSION}.tar.gz -O /opt/ei_health_check_${HEALTH_CHECK_VERSION}.tar.gz \
 && tar -xvf /opt/ei_health_check_${HEALTH_CHECK_VERSION}.tar.gz -C /opt/ \
 && rm -rf /opt/ei_health_check_${HEALTH_CHECK_VERSION}.tar.gz \
 && chmod a+x /opt/ei_health_check/bin/health_check

RUN pip --no-cache-dir install --upgrade \
    pip \
    setuptools \

# Some TF tools expect a "python" binary
RUN ln -s $(which ${PYTHON}) /usr/local/bin/python \
 && pip install -U --no-cache-dir docutils==0.14 awscli==1.16.196

# Expose ports
# gRPC & REST
EXPOSE 8500 8501

RUN wget https://amazonei-tensorflow.s3.amazonaws.com/tensorflow-serving/v1.14/ubuntu/archive/tensorflow-serving-${S3_TF_VERSION}-ubuntu-ei-${S3_TF_EI_VERSION}.tar.gz \
            -O /tmp/tensorflow-serving-${S3_TF_VERSION}-ubuntu-ei-${S3_TF_EI_VERSION}.tar.gz \
 && cd /tmp \
 && tar zxf tensorflow-serving-${S3_TF_VERSION}-ubuntu-ei-${S3_TF_EI_VERSION}.tar.gz \
 && mv tensorflow-serving-${S3_TF_VERSION}-ubuntu-ei-${S3_TF_EI_VERSION}/amazonei_tensorflow_model_server /usr/bin/tensorflow_model_server \
 && chmod +x /usr/bin/tensorflow_model_server \
 && rm -rf tensorflow-serving-${S3_TF_VERSION}*

# Set where models should be stored in the container
RUN mkdir -p ${MODEL_BASE_PATH}

RUN echo '#!/bin/bash \n\n' > /usr/bin/tf_serving_entrypoint.sh \
 && echo '/usr/bin/tensorflow_model_server --port=8500 --rest_api_port=8501 --model_name=${MODEL_NAME} --model_base_path=${MODEL_BASE_PATH}/${MODEL_NAME} "$@"' >> /usr/bin/tf_serving_entrypoint.sh \
 && chmod +x /usr/bin/tf_serving_entrypoint.sh

CMD ["/usr/bin/tf_serving_entrypoint.sh"]
